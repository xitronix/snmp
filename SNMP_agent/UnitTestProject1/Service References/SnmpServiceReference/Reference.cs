//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestProject1.SnmpServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SnmpTypeObject", Namespace="http://schemas.datacontract.org/2004/07/SnmpService")]
    [System.SerializableAttribute()]
    public partial class SnmpTypeObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SnmpServiceReference.ISnmpService")]
    public interface ISnmpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnmpService/Get", ReplyAction="http://tempuri.org/ISnmpService/GetResponse")]
        UnitTestProject1.SnmpServiceReference.SnmpTypeObject Get(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmpObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnmpService/Get", ReplyAction="http://tempuri.org/ISnmpService/GetResponse")]
        System.Threading.Tasks.Task<UnitTestProject1.SnmpServiceReference.SnmpTypeObject> GetAsync(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmpObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnmpService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISnmpService/GetDataUsingDataContractResponse")]
        UnitTestProject1.SnmpServiceReference.SnmpTypeObject GetDataUsingDataContract(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnmpService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISnmpService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<UnitTestProject1.SnmpServiceReference.SnmpTypeObject> GetDataUsingDataContractAsync(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISnmpServiceChannel : UnitTestProject1.SnmpServiceReference.ISnmpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SnmpServiceClient : System.ServiceModel.ClientBase<UnitTestProject1.SnmpServiceReference.ISnmpService>, UnitTestProject1.SnmpServiceReference.ISnmpService {
        
        public SnmpServiceClient() {
        }
        
        public SnmpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SnmpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnmpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnmpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UnitTestProject1.SnmpServiceReference.SnmpTypeObject Get(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmpObject) {
            return base.Channel.Get(snmpObject);
        }
        
        public System.Threading.Tasks.Task<UnitTestProject1.SnmpServiceReference.SnmpTypeObject> GetAsync(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmpObject) {
            return base.Channel.GetAsync(snmpObject);
        }
        
        public UnitTestProject1.SnmpServiceReference.SnmpTypeObject GetDataUsingDataContract(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmp) {
            return base.Channel.GetDataUsingDataContract(snmp);
        }
        
        public System.Threading.Tasks.Task<UnitTestProject1.SnmpServiceReference.SnmpTypeObject> GetDataUsingDataContractAsync(UnitTestProject1.SnmpServiceReference.SnmpTypeObject snmp) {
            return base.Channel.GetDataUsingDataContractAsync(snmp);
        }
    }
}
